# PROMPTING
#        When  executing interactively, bash displays the primary prompt PS1 when it is ready to read a command, and
#        the secondary prompt PS2 when it needs more input to complete a command.  Bash displays PS0 after it  reads
#        a command but before executing it.  Bash allows these prompt strings to be customized by inserting a number
#        of backslash-escaped special characters that are decoded as follows:
#               \a     an ASCII bell character (07)
#               \d     the date in "Weekday Month Date" format (e.g., "Tue May 26")
#               \D{format}
#                      the format is passed to strftime(3) and the result is inserted into  the  prompt  string;  an
#                      empty format results in a locale-specific time representation.  The braces are required
#               \e     an ASCII escape character (033)
#               \h     the hostname up to the first `.'
#               \H     the hostname
#               \j     the number of jobs currently managed by the shell
#               \l     the basename of the shell's terminal device name
#               \n     newline
#               \r     carriage return
#               \s     the name of the shell, the basename of $0 (the portion following the final slash)
#               \t     the current time in 24-hour HH:MM:SS format
#               \T     the current time in 12-hour HH:MM:SS format
#               \@     the current time in 12-hour am/pm format
#               \A     the current time in 24-hour HH:MM format
#               \u     the username of the current user
#               \v     the version of bash (e.g., 2.00)
#               \V     the release of bash, version + patch level (e.g., 2.00.0)
#               \w     the  current  working  directory,  with $HOME abbreviated with a tilde (uses the value of the
#                      PROMPT_DIRTRIM variable)
#               \W     the basename of the current working directory, with $HOME abbreviated with a tilde
#               \!     the history number of this command
#               \#     the command number of this command
#               \$     if the effective UID is 0, a #, otherwise a $
#               \nnn   the character corresponding to the octal number nnn
#               \\     a backslash
#               \[     begin a sequence of non-printing characters, which could be used to embed a terminal  control
#                      sequence into the prompt
#               \]     end a sequence of non-printing characters
# 
#        The  command  number  and  the history number are usually different: the history number of a command is its
#        position in the history list, which may include commands  restored  from  the  history  file  (see  HISTORY
#        below),  while  the  command number is the position in the sequence of commands executed during the current
#        shell session.  After the string is decoded, it is expanded via parameter expansion, command  substitution,
#        arithmetic  expansion,  and  quote  removal,  subject  to the value of the promptvars shell option (see the
#        description of the shopt command under SHELL BUILTIN COMMANDS below).
PROMPT="\u@\h \w"
# attempt to set terminal title
# TITLE="\e]1;${PROMPT}\a"
export PS1="${PROMPT}\n$ "

# old config with some intelligence around colour
#
# # set a fancy prompt (non-color, unless we know we "want" color)
# case "$TERM" in
#     xterm-color) color_prompt=yes;;
# esac
# 
# # uncomment for a colored prompt, if the terminal has the capability; turned
# # off by default to not distract the user: the focus in a terminal window
# # should be on the output of commands, not on the prompt
# #force_color_prompt=yes
# 
# if [ -n "$force_color_prompt" ]; then
#     if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# 	# We have color support; assume it's compliant with Ecma-48
# 	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# 	# a case would tend to support setf rather than setaf.)
# 	color_prompt=yes
#     else
# 	color_prompt=
#     fi
# fi
# 
# if [ "$color_prompt" = yes ]; then
#     PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\[\033[00m\]:\[\033[01;34m\]\h\[\033[00m\]\$ '
# else
#     PS1='${debian_chroot:+($debian_chroot)}\u@\h:\$ '
# fi
# unset color_prompt force_color_prompt
# 
# # If this is an xterm set the title to user@host:dir
# case "$TERM" in
# xterm*|rxvt*)
#     PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \a\]$PS1"
#     ;;
# *)
#     ;;
# esac
# 
